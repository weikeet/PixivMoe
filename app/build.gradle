plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-kapt'
  id 'AndResGuard'
}

android {
  compileSdkVersion 31
  buildToolsVersion "30.0.3"
  defaultConfig {
    applicationId "me.weicools.pixivmoe"
    minSdkVersion 21
    targetSdkVersion 31
    versionCode 1
    versionName "1.0"
  }

  buildTypes {
    debug {
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    abortOnError false
  }

  kapt {
    correctErrorTypes = true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }
}

dependencies {
  implementation(DepLibs.KotlinLib)

  implementation(AndroidXLibs.CoreKtx)
  implementation(AndroidXLibs.AppCompat)
  implementation(AndroidXLibs.FragmentKtx)
  implementation(AndroidXLibs.MaterialDesign)
  implementation(AndroidXLibs.ConstraintLayout)

  implementation(DepLibs.Gson)

  implementation(RxLibs.RxJava3)
  implementation(RxLibs.RxAndroid3)

  implementation(HttpLibs.Retrofit)
  implementation(HttpLibs.RetrofitConverterGson)
  implementation(HttpLibs.RetrofitAdapterRxJava3)

  implementation(ImageLoaderLibs.GlideTransformations)
  implementation(ImageLoaderLibs.Glide)
  kapt(ImageLoaderLibs.GlideCompiler)

  implementation(WidgetLibs.MultiType)
  implementation(WidgetLibs.PhotoView)
  implementation(WidgetLibs.FlowLayout)

  implementation(AnalyticLibs.Timber)
  debugImplementation(AnalyticLibs.LeakCanaryDebug)
}

andResGuard {
  // mappingFile = file("./resource_mapping.txt")
  mappingFile = null
  use7zip = true
  useSign = true
  // It will keep the origin path of your resources when it's true
  keepRoot = false
  // If set, name column in arsc those need to proguard will be kept to this value
  fixedResName = "arg"
  // It will merge the duplicated resources, but don't rely on this feature too much.
  // it's always better to remove duplicated resource from repo
  mergeDuplicatedRes = true
  whiteList = [// your icon
               "R.drawable.icon",
               // for fabric
               "R.string.com.crashlytics.*",
               // for google-services
               "R.string.google_app_id",
               "R.string.gcm_defaultSenderId",
               "R.string.default_web_client_id",
               "R.string.ga_trackingId",
               "R.string.firebase_database_url",
               "R.string.google_api_key",
               "R.string.google_crash_reporting_api_key",
               "R.string.project_id",]
  compressFilePattern = ["*.png",
                         "*.jpg",
                         "*.jpeg",
                         "*.gif",]
  sevenzip {
    artifact = 'com.tencent.mm:SevenZip:1.2.21'
    //path = "/usr/local/bin/7za"
  }

  /**
   * Optional: if finalApkBackupPath is null, AndResGuard will overwrite final apk
   * to the path which assemble[Task] write to
   **/
  // finalApkBackupPath = "${project.rootDir}/final.apk"

  /**
   * Optional: Specifies the name of the message digest algorithm to user when digesting the entries of JAR file
   * Only works in V1signing, default value is "SHA-1"
   **/
  // digestalg = "SHA-256"
}